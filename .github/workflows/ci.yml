name: CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - ".github/**"
      - "Makefile.toml"
      - "README.md"
  pull_request:
    branches:
      - main
      - dev

env:
  CARGO_TERM_COLOR: always

jobs:
  # Run cargo clippy -- -D warnings
  clippy_check:
    name: Clippy
    runs-on: ubuntu-latest
    env:
      OPENMC_ENCRYPT_KEY: ${{ secrets.OPENMC_ENCRYPT_KEY }}
      LITCRYPT_ENCRYPT_KEY: ${{ secrets.LITCRYPT_ENCRYPT_KEY }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install packages (Linux)
        if: runner.os == 'Linux'
        uses: rerun-io/cache-apt-pkgs-action@59534850182063abf1b2c11bb3686722a12a8397
        with:
          packages: libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libgtk-3-dev # libgtk-3-dev is used by rfd
          version: 1.0
          execute_install_scripts: true
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.toml') }}
      - uses: dsherret/rust-toolchain-file@v1
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  # Run cargo fmt --all -- --check
  format:
    name: Format
    runs-on: ubuntu-latest
    env:
      OPENMC_ENCRYPT_KEY: ${{ secrets.OPENMC_ENCRYPT_KEY }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - uses: dsherret/rust-toolchain-file@v1
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
